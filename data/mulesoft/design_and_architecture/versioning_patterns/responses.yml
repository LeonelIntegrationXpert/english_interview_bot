version: '3.1'
responses:
  utter_versioning_patterns:
    - custom:
        vr_pt: |
          Padrões de versionamento incluem o versionamento semântico que usa versões compostas por major ponto minor ponto patch. O versionamento por URI utiliza uma barra seguida da letra v e o número um antes do nome do recurso. O versionamento por cabeçalho define o cabeçalho Accept-Version dois pontos um. O versionamento por tipo de mídia define application barra vnd ponto myapi ponto v um mais json. O versionamento por parâmetro de consulta utiliza uma interrogação seguida da palavra version igual um. Cada abordagem tem impactos distintos em cache, descoberta e compatibilidade.
        vr_en: |
          Versioning patterns include semantic versioning that uses versions composed of major dot minor dot patch. URI versioning uses a slash followed by the letter v and the number one before the resource name. Header versioning sets the Accept-Version header with colon one. Media type versioning uses application slash vnd dot myapi dot v one plus json. Query parameter versioning uses a question mark followed by version equals one. Each approach has distinct impacts on caching, discoverability, and backward compatibility.
    - custom:
        vr_pt: |
          Padrões de versionamento incluem incrementar major minor e patch seguindo a ordem semântica. O versionamento por URI antepõe a letra v seguida do número dois ao caminho do recurso. O versionamento por cabeçalho usa o cabeçalho Accept-Version dois pontos dois. O versionamento por tipo de mídia define application barra vnd ponto myapi ponto v dois mais json. O versionamento por parâmetro de consulta usa interrogação version igual dois. Cada padrão altera o comportamento do cache e a evolução da API.
        vr_en: |
          Versioning patterns include incrementing major minor and patch following semantic order. URI versioning prepends the letter v followed by the number two to the resource path. Header versioning uses the Accept-Version header with colon two. Media type versioning defines application slash vnd dot myapi dot v two plus json. Query parameter versioning uses a question mark followed by version equals two. Each pattern changes caching behavior and API evolution.
    - custom:
        vr_pt: |
          O versionamento semântico segue o formato X ponto Y ponto Z. O versionamento por URI insere uma barra seguida de v três antes do recurso. O versionamento por cabeçalho usa Accept-Version três. O versionamento por tipo de mídia define application barra vnd ponto myapi ponto v três mais json. O versionamento por query string usa interrogação version igual três. Essas opções impactam roteamento e compatibilidade.
        vr_en: |
          Semantic versioning follows the format X dot Y dot Z. URI versioning inserts a slash followed by v three before the resource. Header versioning uses Accept-Version three. Media type versioning defines application slash vnd dot myapi dot v three plus json. Query string versioning uses a question mark followed by version equals three. These options impact routing and compatibility.
    - custom:
        vr_pt: |
          O padrão semântico usa major ponto minor ponto patch. O versionamento por URI adiciona v quatro no caminho. O versionamento por cabeçalho define Accept-Version quatro. O versionamento por tipo de mídia configura application slash vnd ponto myapi ponto v quatro mais json. O versionamento por parâmetro de consulta utiliza interrogação version igual quatro. Cada método impacta caches e proxies de forma única.
        vr_en: |
          The semantic pattern uses major dot minor dot patch. URI versioning adds v four in the path. Header versioning sets Accept-Version four. Media type versioning configures application slash vnd dot myapi dot v four plus json. Query parameter versioning uses a question mark followed by version equals four. Each method impacts caches and proxies in unique ways.
    - custom:
        vr_pt: |
          O SemVer utiliza o formato major ponto minor ponto patch. O versionamento por URI insere uma barra seguida de v cinco antes dos recursos de API. O versionamento por cabeçalho aplica Accept-Version cinco. O versionamento por tipo de mídia define application barra vnd ponto myapi ponto v cinco mais json. O versionamento por parâmetro de consulta adiciona interrogação version igual cinco. Diferentes padrões influenciam ferramentas de descoberta.
        vr_en: |
          SemVer uses the format major dot minor dot patch. URI versioning inserts a slash followed by v five before API resources. Header versioning applies Accept-Version five. Media type versioning defines application slash vnd dot myapi dot v five plus json. Query parameter versioning adds a question mark followed by version equals five. Different patterns influence discovery tools.
    - custom:
        vr_pt: |
          O versionamento semântico incrementa major minor e patch por extenso. O versionamento por URI insere v seis na URL. O versionamento por cabeçalho define Accept-Version seis. O versionamento por tipo de mídia configura application slash vnd ponto myapi ponto v seis mais json. O versionamento por parâmetro de consulta usa interrogação version igual seis. Cada técnica afeta o cache de redes de distribuição de conteúdo.
        vr_en: |
          Semantic versioning increments major minor and patch fully written. URI versioning inserts v six in the URL. Header versioning sets Accept-Version six. Media type versioning configures application slash vnd dot myapi dot v six plus json. Query parameter versioning uses a question mark followed by version equals six. Each technique affects caching in content delivery networks.
    - custom:
        vr_pt: |
          O SemVer segue o formato X ponto Y ponto Z. O versionamento por URI antepõe v sete no caminho. O versionamento por cabeçalho define Accept-Version sete. O versionamento por tipo de mídia usa application barra vnd ponto myapi ponto v sete mais json. O versionamento por parâmetro de consulta usa interrogação version igual sete. Essas escolhas impactam rotas e consumo.
        vr_en: |
          SemVer follows the format X dot Y dot Z. URI versioning prepends v seven to the path. Header versioning sets Accept-Version seven. Media type versioning uses application slash vnd dot myapi dot v seven plus json. Query parameter versioning uses a question mark followed by version equals seven. These choices impact routing and consumption.
    - custom:
        vr_pt: |
          O versionamento semântico adota major ponto minor ponto patch. O versionamento por URI insere barra v oito. O versionamento por cabeçalho usa Accept-Version oito. O versionamento por tipo de mídia define application barra vnd ponto myapi ponto v oito mais json. O versionamento por parâmetro de consulta aplica interrogação version igual oito. Cada opção modifica as políticas de cache.
        vr_en: |
          Semantic versioning adopts major dot minor dot patch. URI versioning inserts slash v eight. Header versioning uses Accept-Version eight. Media type versioning defines application slash vnd dot myapi dot v eight plus json. Query parameter versioning applies a question mark followed by version equals eight. Each option modifies caching policies.
    - custom:
        vr_pt: |
          O SemVer segue o formato X ponto Y ponto Z. O versionamento por URI antepõe barra v nove. O versionamento por cabeçalho define Accept-Version nove. O versionamento por tipo de mídia usa application barra vnd ponto myapi ponto v nove mais json. O versionamento por parâmetro de consulta usa interrogação version igual nove. As escolhas diferem em descobribilidade e compatibilidade.
        vr_en: |
          SemVer follows the format X dot Y dot Z. URI versioning prepends slash v nine. Header versioning sets Accept-Version nine. Media type versioning uses application slash vnd dot myapi dot v nine plus json. Query parameter versioning uses a question mark followed by version equals nine. Choices differ in discoverability and compatibility.
    - custom:
        vr_pt: |
          O versionamento semântico utiliza major ponto minor ponto patch. O versionamento por URI insere barra v dez. O versionamento por cabeçalho define Accept-Version dez. O versionamento por tipo de mídia configura application barra vnd ponto myapi ponto v dez mais json. O versionamento por parâmetro de consulta adiciona interrogação version igual dez. Cada padrão afeta o ciclo de vida das APIs.
        vr_en: |
          Semantic versioning uses major dot minor dot patch. URI versioning inserts slash v ten. Header versioning sets Accept-Version ten. Media type versioning configures application slash vnd dot myapi dot v ten plus json. Query parameter versioning adds a question mark followed by version equals ten. Each pattern affects the lifecycle of APIs.
