version: '3.1'
responses:
  utter_dataweave_basic:
    - custom:
        response_array:
          -   - vr_pt: |
                  Eu uso DataWeave para:
                  - ler JSON ou XML e converter em objetos nativos
                  - mapear campos com a função map
                  - usar operador pluck para extrair listas
                  - aplicar filtros com filter e default values
              - vr_en: |
                  I use DataWeave to:
                  - read JSON or XML and convert to native objects
                  - map fields with the map function
                  - extract lists using the pluck operator
                  - apply filters with filter and default values
                  #intent: mulesoft/dataweave_functions
                  #pt:
                  - como vc utiliza funções personalizadas no DataWeave?
                  - como tu cria funs custom no DW?
                  - como vc aplica funç custom em DataWeave?
                  - como tu faz módulo de funções DW?
                  - como vc escreve função DW reusable?
                  #en:
                  - how do you use custom functions in DataWeave?
                  - how do u create custom funcs in DW?
                  - how u apply custom function in DataWeave?
                  - how do u build function modules in DW?
                  - how u write reusable DW functions?
                  #vr_pt: |
                  Eu defino funções assim:
                  - uso fun com parâmetros e retorno tipado
                  - organizo em pacotes em src/main/resources/modules
                  - importo com import dw::MyModule::*
                  - testo funções isoladamente com MUnit
                  #vr_en: |
                  I define functions by:
                  - using fun with parameters and typed return
                  - organizing in modules under src/main/resources/modules
                  - importing with import dw::MyModule::*
                  - testing functions standalone with MUnit
                  #intent: mulesoft/dataweave_performance
                  #pt:
                  - como vc otimiza performance do DataWeave?
                  - como tu melhora perf no DW?
                  - como vc ajusta DW pra rodar rápido?
                  - como tu evita lentidão no DataWeave?
                  - como vc acelera transformação DW?
                  #en:
                  - how do you optimize DataWeave performance?
                  - how do u improve DW performance?
                  - how u tune DataWeave for speed?
                  - how do u avoid slowdowns in DW?
                  - how u accelerate DW transformations?
                  #vr_pt: |
                  Eu otimizo assim:
                  - uso streaming para grandes payloads
                  - evito conversões desnecessárias com as operator
                  - mantenho menor número de recursões
                  - cacheio resultados em variables quando possível
                  #vr_en: |
                  I optimize by:
                  - using streaming for large payloads
                  - avoiding unnecessary type conversions with the as operator
                  - minimizing recursion depth
                  - caching results in variables when possible
                  #intent: mulesoft/dataweave_error_handling
                  #pt:
                  - como vc trata erro em DataWeave?
                  - como tu faz try catch no DW?
                  - como vc detecta erro em transformação?
                  - como tu implementa tratamento em DW?
                  - como vc lida com dados inválidos DW?
                  #en:
                  - how do you handle errors in DataWeave?
                  - how do u do try catch in DW?
                  - how u detect errors in transformations?
                  - how do u implement error handling in DW?
                  - how u deal with invalid data in DW?
                  #vr_pt: |
                  Eu trato erros assim:
                  - envolvo bloco em try catch
                  - uso defaultValue para fallback
                  - registro mensagem com errorMessage
                  - retorno objeto com chave error e message
                  #vr_en: |
                  I handle errors by:
                  - wrapping code in try catch blocks
                  - using defaultValue for fallback
                  - logging errors with errorMessage
                  - returning an object with error and message keys
                  #intent: mulesoft/dataweave_module_management
                  #pt:
                  - como vc gerencia módulos DW?
                  - como tu organiza código DW em módulos?
                  - como vc reutiliza módulos de DataWeave?
                  - como tu gerencia dependências DW?
                  - como vc registra módulo DW?
                  #en:
                  - how do you manage DW modules?
                  - how do u organize DataWeave code in modules?
                  - how u reuse DataWeave modules?
                  - how do u handle DW dependencies?
                  - how u register DW modules?
                  #vr_pt: |
                  Eu gerencio módulos:
                  - crio arquivos .dwl em modules folder
                  - atualizo dw::Application.properties para path
                  - versiono módulos com Maven
                  - publico em Exchange para uso cross-project
                  #vr_en: |
                  I manage modules by:
                  - creating .dwl files in the modules folder
                  - updating dw::Application.properties for path resolution
                  - versioning modules with Maven
                  - publishing to Exchange for cross-project use
                  #intent: mulesoft/dataweave_streaming
                  #pt:
                  - como vc usa streaming em DataWeave?
                  - como tu implementa streaming DW?
                  - como vc processa grande volume em DW?
                  - como tu evita OutOfMemory DW?
                  - como vc leitura streaming DW?
                  #en:
                  - how do you use streaming in DataWeave?
                  - how do u implement DW streaming?
                  - how u process large volumes in DW?
                  - how do u avoid OutOfMemory in DW?
                  - how u perform streaming reads in DW?
                  #vr_pt: |
                  Eu uso streaming assim:
                  - defino read(strategy streaming) no header
                  - evito load completo de payload em memória
                  - processo cada record com mapObject
                  - uso chunkSize para controlar buffers
                  #vr_en: |
                  I use streaming by:
                  - setting read(strategy streaming) in the header
                  - avoiding full payload load into memory
                  - processing each record with mapObject
                  - using chunkSize to control buffers
                  #intent: mulesoft/dataweave_testing
                  #pt:
                  - como vc testa scripts DW?
                  - como tu faz MUnit para DataWeave?
                  - como vc valida saída DW?
                  - como tu escreve teste unitário DW?
                  - como vc automatiza teste DW?
                  #en:
                  - how do you test DW scripts?
                  - how do u write MUnit for DataWeave?
                  - how u validate DW output?
                  - how do u create DW unit tests?
                  - how u automate DW testing?
                  #vr_pt: |
                  Eu testo scripts:
                  - defino test case em MUnit especificando input e expected output
                  - uso assertEquals para comparar JSONs
                  - agrupo testes em suite dw-tests-allure
                  - integro no CI para execução automatizada
                  #vr_en: |
                  I test scripts by:
                  - defining MUnit test cases with input and expected output
                  - using assertEquals to compare JSONs
                  - grouping tests in dw-tests-allure suite
                  - integrating into CI for automated execution
