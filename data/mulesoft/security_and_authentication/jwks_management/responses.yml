version: '3.1'
responses:
  utter_jwks_management:
    - custom:
        vr_pt: |
          A gestão de chaves JWKS consiste em disponibilizar um conjunto de chaves públicas chamado JSON Web Key Set, que fica acessível por meio de um endpoint web denominado URI do JWKS. Este conjunto de chaves é usado para verificar a autenticidade e a integridade dos tokens JWT recebidos. No ambiente MuleSoft, aplica-se a política denominada validação JWT apontando para este URI. O processo envolve a rotação periódica das chaves, a atualização automática do cache do JWKS para evitar latência, a configuração do truststore para conexões seguras HTTPS, e a implementação de um mecanismo de fallback para casos em que o provedor de chaves esteja indisponível.
        vr_en: |
          JWKS key management consists of providing a set of public keys called JSON Web Key Set, which is accessible through a web endpoint known as the JWKS URI. This key set is used to verify the authenticity and integrity of received JWT tokens. In the MuleSoft environment, you apply the policy called JWT Validation pointing to this URI. The process includes periodic key rotation, automatic JWKS cache updates to avoid latency, truststore configuration for secure HTTPS connections, and implementing a fallback mechanism in case the key provider becomes unavailable.
    - custom:
        vr_pt: |
          No gerenciamento de JWKS, publica-se um arquivo JSON contendo todas as chaves públicas necessárias para validar tokens JWT. Este arquivo é disponibilizado por um endereço web fixo, chamado URI. Na plataforma MuleSoft, configura-se a política de validação JWT para referenciar esse endereço, garantindo que as APIs verifiquem os tokens com base nessas chaves. O ciclo de vida envolve a renovação programada das chaves, recarga automática do cache para manter a performance, configuração adequada de certificados confiáveis para conexões seguras e um mecanismo de contingência para casos em que o serviço de JWKS fique indisponível.
        vr_en: |
          In JWKS management, you publish a JSON file containing all the public keys needed to validate JWT tokens. This file is provided at a fixed web address called a URI. In the MuleSoft platform, you configure the JWT validation policy to reference this address, ensuring that APIs verify tokens based on these keys. The lifecycle involves scheduled key renewal, automatic cache reload to maintain performance, proper configuration of trusted certificates for secure connections, and a contingency mechanism for cases where the JWKS service becomes unavailable.
    - custom:
        vr_pt: |
          Gerenciar o JWKS significa manter um conjunto público de chaves digitais em formato JSON acessível por um endpoint web, para que as APIs possam consultar essas chaves durante a validação dos tokens JWT. No Anypoint Platform, isso é feito aplicando a política de validação JWT configurada com o endereço do JWKS. É necessário planejar a rotação regular dessas chaves para manter a segurança, garantir a atualização automática do cache do JWKS para evitar impacto na performance, configurar o truststore para assegurar conexões HTTPS confiáveis e prever mecanismos de fallback para alternar para provedores secundários de chaves em caso de falhas.
        vr_en: |
          Managing JWKS means maintaining a public set of digital keys in JSON format accessible through a web endpoint so that APIs can fetch these keys when validating JWT tokens. In the Anypoint Platform, this is done by applying the JWT validation policy configured with the JWKS address. You need to plan regular rotation of these keys to maintain security, ensure automatic JWKS cache updates to avoid performance impact, configure the truststore to secure reliable HTTPS connections, and provide fallback mechanisms to switch to secondary key providers in case of failures.
    - custom:
        vr_pt: |
          A estratégia de gestão do JWKS envolve expor um arquivo JSON com as chaves públicas em um endpoint que as APIs utilizam para verificar tokens JWT recebidos. No ambiente MuleSoft, configura-se a política chamada validação JWT utilizando esse URI do JWKS. O processo completo inclui atualizações periódicas das chaves, recarga do cache do JWKS para garantir rapidez nas consultas, configuração do truststore para conexões TLS seguras e elaboração de planos de contingência para situações em que o serviço de chaves falhe ou fique indisponível.
        vr_en: |
          The JWKS management strategy involves exposing a JSON file with public keys at an endpoint that APIs use to verify received JWT tokens. In the MuleSoft environment, you configure the policy called JWT Validation using this JWKS URI. The complete process includes periodic key updates, JWKS cache reload to ensure fast lookups, truststore configuration for secure TLS connections, and contingency plans for situations where the key service fails or becomes unavailable.
    - custom:
        vr_pt: |
          Publicar e manter um JWKS significa criar e disponibilizar um arquivo JSON Web Key Set contendo as chaves públicas em uma URI acessível que as APIs chamam para validar tokens JWT recebidos. No MuleSoft, é suficiente configurar a política de validação JWT apontando para esse URI. O processo deve incluir rotação automatizada de chaves para evitar uso de chaves comprometidas, um cache inteligente do JWKS para otimizar performance, ajustes no truststore para conexões HTTPS seguras, e mecanismos de fallback para casos onde a fonte de chaves não responder.
        vr_en: |
          Publishing and maintaining a JWKS means creating and providing a JSON Web Key Set file containing the public keys at an accessible URI that APIs call to validate received JWT tokens. In MuleSoft, it is enough to configure the JWT validation policy pointing to this URI. The process should include automated key rotation to prevent use of compromised keys, intelligent JWKS caching to optimize performance, truststore adjustments for secure HTTPS connections, and fallback mechanisms for cases where the key source does not respond.
    - custom:
        vr_pt: |
          No gerenciamento de JWKS, um arquivo JSON contendo as chaves públicas é hospedado em um endpoint web, acessível por meio de um URI. As APIs na plataforma MuleSoft referenciam esse URI na política chamada validação JWT para validar os tokens recebidos. É essencial configurar a rotação programada das chaves, recarga automática do cache do JWKS para evitar atrasos, garantir que o truststore esteja configurado para conexões seguras via HTTPS, e implementar fallback para casos de indisponibilidade do serviço JWKS.
        vr_en: |
          In JWKS management, a JSON file containing public keys is hosted at a web endpoint accessible via a URI. APIs on the MuleSoft platform reference this URI in the policy called JWT Validation to validate received tokens. It is essential to configure scheduled key rotation, automatic JWKS cache reload to avoid delays, ensure the truststore is set up for secure HTTPS connections, and implement fallback for cases of JWKS service unavailability.
    - custom:
        vr_pt: |
          Gerenciar um JWKS significa fornecer um JSON Web Key Set contendo as chaves públicas em um endpoint acessível, que é utilizado pela política de validação JWT do MuleSoft para verificar a autenticidade dos tokens. O ciclo de gestão inclui atualizações regulares das chaves, recarga automática do cache JWKS para manter performance, configuração de certificados confiáveis no truststore e um mecanismo de fallback para ativar fontes alternativas de chaves caso o serviço principal falhe.
        vr_en: |
          Managing a JWKS means providing a JSON Web Key Set containing public keys at an accessible endpoint, which is used by MuleSoft’s JWT validation policy to verify token authenticity. The management cycle includes regular key updates, automatic JWKS cache reload to maintain performance, trusted certificate configuration in the truststore, and a fallback mechanism to activate alternative key sources if the main service fails.
    - custom:
        vr_pt: |
          O gerenciamento de chaves JWKS é o processo de disponibilizar um JSON Web Key Set contendo chaves públicas acessíveis por meio de um URI. Na plataforma Anypoint, configura-se a política de validação JWT para utilizar esse endereço. É importante planejar rotação periódica das chaves, atualizar automaticamente o cache do JWKS, configurar o truststore para conexões TLS seguras e preparar mecanismos de fallback para casos de falhas no serviço JWKS.
        vr_en: |
          JWKS key management is the process of providing a JSON Web Key Set containing public keys accessible via a URI. On the Anypoint platform, you configure the JWT validation policy to use this address. It is important to plan periodic key rotations, automatically update the JWKS cache, configure the truststore for secure TLS connections, and prepare fallback mechanisms for JWKS service failures.
    - custom:
        vr_pt: |
          Na prática, o gerenciamento de JWKS consiste em expor um arquivo JSON contendo as chaves públicas em um endpoint e configurar a política de validação JWT do MuleSoft para apontar para esse endpoint. Além disso, estabelece-se um cronograma para a rotação programada das chaves, a atualização automática do cache do JWKS, a configuração correta do truststore para conexões HTTPS, e um mecanismo de fallback para usar uma fonte alternativa de chaves caso ocorra algum erro ou indisponibilidade.
        vr_en: |
          In practice, JWKS management consists of exposing a JSON file containing public keys at an endpoint and configuring MuleSoft’s JWT validation policy to point to this endpoint. Additionally, a schedule is set for programmed key rotation, automatic JWKS cache updates, proper truststore configuration for HTTPS connections, and a fallback mechanism to use an alternative key source in case of errors or unavailability.
    - custom:
        vr_pt: |
          O gerenciamento de JWKS consiste em criar um JSON Web Key Set com chaves públicas e disponibilizá-lo por meio de uma URI para validação de tokens JWT. Em MuleSoft, configura-se a política chamada validação JWT para apontar para esse endpoint. O fluxo de trabalho inclui a rotação periódica de chaves, recarga automática do cache do JWKS, configuração do truststore para conexões HTTPS seguras, e implementação de fallback para garantir disponibilidade caso o endpoint principal não responda.
        vr_en: |
          JWKS management consists of creating a JSON Web Key Set with public keys and making it available through a URI for JWT token validation. In MuleSoft, you configure the policy called JWT Validation to point to this endpoint. The workflow includes periodic key rotation, automatic JWKS cache reload, truststore configuration for secure HTTPS connections, and fallback implementation to ensure availability if the primary endpoint does not respond.
