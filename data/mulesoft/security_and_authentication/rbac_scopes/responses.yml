version: '3.1'
responses:
  utter_rbac_scopes:
    - custom:
        vr_pt: |
          O controle de acesso baseado em papéis, conhecido como RBAC, funciona atribuindo a cada papel um conjunto específico de permissões. Os usuários são associados a esses papéis conforme suas funções na empresa, simplificando a gestão de acessos e garantindo que cada pessoa tenha apenas os privilégios necessários para realizar seu trabalho. No protocolo OAuth dois, os scopes são usados para definir, com riqueza de detalhes, quais recursos cada token de acesso pode utilizar. Assim, o RBAC permite agrupar permissões por equipes ou departamentos, enquanto os scopes restringem as operações possíveis dentro das APIs. Essa combinação oferece uma abordagem unificada, que garante segurança detalhada, controle preciso e conformidade ao longo de todo o ciclo de vida das APIs.
        vr_en: |
          Role based access control, known as RBAC, works by assigning each role a specific set of permissions. Users are linked to these roles according to their functions in the company, simplifying access management and ensuring that each person has only the privileges necessary to perform their job. In the OAuth two protocol, scopes are used to define in detail which resources each access token can use. Thus, RBAC allows grouping permissions by teams or departments, while scopes restrict possible operations within APIs. This combination provides a unified approach that ensures detailed security, precise control and compliance throughout the entire API lifecycle.
    - custom:
        vr_pt: |
          No modelo RBAC, você cria funções com permissões definidas, e depois associa usuários a essas funções, centralizando o controle e facilitando a administração dos acessos. Os scopes do OAuth dois permitem que você configure permissões específicas para cada chamada de API, limitando o que o token pode fazer. Ao unir RBAC com scopes, você obtém um controle preciso sobre quem pode acessar o quê e quais operações podem ser realizadas. Esse modelo robusto protege as APIs com regras claras, auditáveis e fáceis de manter.
        vr_en: |
          In the RBAC model, you create roles with defined permissions, and then assign users to those roles, centralizing control and simplifying access administration. OAuth two scopes allow you to configure specific permissions for each API call, limiting what the token can do. By combining RBAC with scopes, you get precise control over who can access what and which operations can be performed. This robust model protects APIs with clear, auditable and easy to maintain rules.
    - custom:
        vr_pt: |
          A estratégia RBAC consiste em criar perfis de acesso baseados em papéis empresariais, associando os usuários a esses perfis conforme sua função e responsabilidade. Paralelamente, os scopes do OAuth dois detalham exatamente os privilégios de acesso contidos em cada token emitido. Usando RBAC você garante uma clara separação de responsabilidades entre equipes diferentes, enquanto os scopes limitam as operações exatas permitidas em cada token. O resultado é um controle seguro, detalhado e adaptável às mudanças constantes dos requisitos de segurança nas empresas.
        vr_en: |
          The RBAC strategy consists of creating access profiles based on business roles, linking users to these profiles according to their function and responsibility. At the same time, OAuth two scopes detail exactly the access privileges contained in each issued token. Using RBAC you ensure clear separation of duties between different teams, while scopes limit the exact operations allowed in each token. The result is a secure, detailed control system that adapts to constant changes in security requirements within companies.
    - custom:
        vr_pt: |
          No controle de acesso baseado em papéis definimos papéis com conjuntos claros de permissões e atribuimos usuários a esses papéis para facilitar a gestão centralizada. Os scopes do OAuth dois especificam quais recursos e ações um token pode executar, garantindo segurança granular. A combinação das duas abordagens permite aplicar políticas rigorosas que asseguram que cada usuário execute somente as operações para as quais está autorizado, evitando acessos indevidos e reforçando a governança de segurança.
        vr_en: |
          In role based access control we define roles with clear sets of permissions and assign users to those roles to facilitate centralized management. OAuth two scopes specify which resources and actions a token can perform, ensuring granular security. Combining the two approaches allows you to enforce strict policies that ensure each user performs only the operations they are authorized for, preventing unauthorized access and strengthening security governance.
    - custom:
        vr_pt: |
          Com RBAC, criamos grupos de funções com permissões específicas e vinculamos usuários a esses grupos para centralizar o processo de autorização. No OAuth dois, usamos scopes para detalhar o nível exato de acesso permitido em cada chamada de API. Essa união entre RBAC e scopes traz visibilidade clara e controle detalhado sobre quem pode fazer o que em cada ponto da integração, aumentando a segurança geral do ambiente e facilitando auditorias e conformidade regulatória.
        vr_en: |
          With RBAC, we create role groups with specific permissions and link users to those groups to centralize the authorization process. In OAuth two, we use scopes to detail the exact level of access allowed in each API call. This union between RBAC and scopes brings clear visibility and detailed control over who can do what at each integration point, increasing overall security and simplifying audits and regulatory compliance.
    - custom:
        vr_pt: |
          A ferramenta RBAC aloca permissões às funções de negócio definidas, e em seguida associa usuários a essas funções, organizando o acesso de forma clara e estruturada. Os scopes do OAuth dois complementam essa abordagem ao definir exatamente quais endpoints e operações cada token pode invocar. Quando usados juntos, RBAC e scopes criam uma camada dupla de segurança que protege os recursos de forma robusta e torna o cumprimento das políticas de segurança mais simples e transparente.
        vr_en: |
          The RBAC system allocates permissions to defined business roles, and then assigns users to these roles, organizing access in a clear and structured way. OAuth two scopes complement this approach by defining exactly which endpoints and operations each token can invoke. When used together, RBAC and scopes create a dual security layer that robustly protects resources and makes security policy compliance simpler and more transparent.
    - custom:
        vr_pt: |
          Em um esquema RBAC, definimos papéis como administrador, desenvolvedor ou analista e atribuímos a cada papel as permissões necessárias para realizar suas funções. Os scopes do OAuth dois descrevem as operações autorizadas para cada token emitido. Ao unir RBAC e scopes, garantimos um controle detalhado de acesso, assegurando que somente as funções autorizadas executem ações específicas nas APIs, prevenindo abusos e mantendo a segurança da plataforma.
        vr_en: |
          In an RBAC scheme, we define roles such as administrator, developer or analyst and assign each role the necessary permissions to perform their functions. OAuth two scopes describe the operations authorized for each issued token. By uniting RBAC and scopes, we ensure detailed access control, guaranteeing that only authorized roles perform specific actions on the APIs, preventing abuse and maintaining platform security.
    - custom:
        vr_pt: |
          O RBAC organiza permissões por papéis, agrupando usuários conforme suas funções na empresa, enquanto os scopes do OAuth dois definem os níveis de acesso e as operações permitidas para cada token. Essa combinação assegura que as equipes tenham apenas as permissões estritamente necessárias para suas atividades, e que os tokens possuam direitos restritos ao mínimo essencial, criando assim um ambiente de execução seguro e bem governado.
        vr_en: |
          RBAC organizes permissions by roles, grouping users according to their business functions, while OAuth two scopes define the access levels and permitted operations for each token. This combination ensures that teams have only the permissions strictly necessary for their activities, and that tokens have rights restricted to the minimum essential, thus creating a secure and well governed runtime environment.
    - custom:
        vr_pt: |
          Com o controle baseado em papéis, definimos quem pode acessar o que associando usuários a papéis de negócio e concedendo as permissões apropriadas. Ao mesmo tempo, usamos scopes no OAuth dois para designar privilégios específicos em cada requisição de API. A junção de RBAC e scopes proporciona um controle preciso, auditável e fácil de gerenciar das operações e fluxos de integração, fortalecendo a segurança e conformidade do sistema.
        vr_en: |
          With role based control, we define who can access what by linking users to business roles and granting appropriate permissions. At the same time, we use OAuth two scopes to assign specific privileges in each API request. The joining of RBAC and scopes provides precise, auditable and easy to manage control of integration operations and flows, strengthening system security and compliance.
    - custom:
        vr_pt: |
          No modelo RBAC, centralizamos a gestão de permissões em papéis de segurança, e vinculamos usuários a esses papéis para facilitar o controle e a administração. Os scopes do OAuth dois atuam no nível do token, especificando quais recursos e operações são permitidos para cada token. Juntos, RBAC e scopes formam uma arquitetura de segurança em camadas que garante proteções granulares, facilidade de auditoria e conformidade contínua com políticas corporativas e regulatórias.
        vr_en: |
          In the RBAC model, we centralize permission management in security roles and link users to those roles to facilitate control and administration. OAuth two scopes operate at the token level, specifying which resources and operations are allowed for each token. Together, RBAC and scopes form a layered security architecture that ensures granular protections, ease of auditing and continuous compliance with corporate and regulatory policies.
