version: '3.1'
responses:
  utter_api_caching:
    - custom:
        vr_pt: |
          O cache de API armazena temporariamente em memória ou em um sistema de armazenamento rápido as respostas de chamadas feitas repetidamente para as APIs. Isso diminui o tempo de resposta ao usuário, pois em vez de enviar a requisição novamente ao back end, o sistema retorna a resposta já armazenada. Essa estratégia reduz a latência, alivia a carga do servidor back end e aumenta a capacidade de atendimento, especialmente em momentos de pico de acesso. É possível configurar exatamente quais recursos, cabeçalhos ou parâmetros devem ser armazenados em cache, bem como definir políticas para expirar ou limpar o cache periodicamente, garantindo que os dados não fiquem obsoletos.
        vr_en: |
          API caching temporarily stores in memory or in a fast storage system the responses of calls made repeatedly to the APIs. This reduces response time for users because instead of sending the request again to the backend, the system returns the already stored response. This strategy lowers latency, reduces backend server load, and increases handling capacity, especially during peak access times. You can configure exactly which resources, headers or parameters should be cached, as well as set policies to expire or clean the cache periodically, ensuring data does not become stale.
    - custom:
        vr_pt: |
          A estratégia de cache em APIs consiste em guardar respostas frequentes em um repositório de alta velocidade, evitando que o serviço de origem seja chamado repetidamente para a mesma informação. Isso resulta em menor tempo de espera para o usuário final e menor uso de recursos do servidor back end. O cache pode ser configurado para segmentar respostas por endpoint, cabeçalhos HTTP ou parâmetros de consulta. Além disso, é possível estabelecer regras claras de validade e de invalidação para garantir que as informações armazenadas estejam sempre atualizadas e corretas.
        vr_en: |
          The API caching strategy involves storing frequent responses in a high-speed repository, preventing the origin service from being called repeatedly for the same information. This results in lower wait times for the end user and less backend server resource usage. Caching can be configured to segment responses by endpoint, HTTP headers or query parameters. Additionally, clear freshness and invalidation rules can be established to ensure stored information is always up to date and correct.
    - custom:
        vr_pt: |
          No cache de API, as respostas dos endpoints mais utilizados são guardadas em memória ou em um armazenamento rápido para evitar que o back end precise processar repetidamente as mesmas requisições. Essa prática reduz a latência das respostas e libera recursos do servidor para outras tarefas importantes. É possível definir o escopo do cache por rota, cabeçalho ou parâmetro, e também configurar políticas de expiração para garantir que as informações armazenadas sejam atualizadas regularmente, melhorando a escalabilidade e a estabilidade dos serviços.
        vr_en: |
          In API caching, responses from the most used endpoints are stored in memory or fast storage to prevent the backend from having to repeatedly process the same requests. This practice reduces response latency and frees server resources for other important tasks. It is possible to define the cache scope by route, header or parameter, and also configure expiration policies to ensure stored information is regularly updated, improving scalability and service stability.
    - custom:
        vr_pt: |
          Cache de API significa conservar localmente as respostas das requisições que se repetem, diminuindo a carga no servidor de origem e acelerando o tempo de entrega para o cliente. Configurando quais recursos, cabeçalhos ou parâmetros serão incluídos no cache, e aplicando políticas de tempo de vida e limpeza periódica, você garante que o sistema responda rapidamente e com dados confiáveis mesmo sob alta demanda e uso intenso.
        vr_en: |
          API caching means locally retaining responses from repeated requests, reducing load on the origin server and speeding up delivery time to the client. By configuring which resources, headers or parameters are included in the cache, and applying time-to-live and periodic cleanup policies, you ensure the system responds quickly and with reliable data even under high demand and intense usage.
    - custom:
        vr_pt: |
          O cache em APIs captura as respostas das chamadas mais frequentes e armazena essas respostas em memória ou em storage de alta velocidade. Dessa forma, evita chamadas desnecessárias ao servidor back end, reduz a latência da aplicação e aumenta a capacidade de processamento geral do sistema. É possível ajustar regras específicas de expiração e invalidação do cache por recurso, cabeçalho ou parâmetro de consulta, garantindo que os dados permaneçam sempre atualizados e consistentes para os consumidores.
        vr_en: |
          API caching captures responses from the most frequent calls and stores these responses in memory or high-speed storage. This way, it prevents unnecessary calls to the backend server, reduces application latency and increases the overall processing capacity of the system. You can fine-tune specific expiration and invalidation rules for the cache by resource, header or query parameter, ensuring data remains always fresh and consistent for consumers.
    - custom:
        vr_pt: |
          Em uma camada de cache para APIs, as respostas são retidas em um armazenamento de acesso rápido, evitando que múltiplas requisições para o mesmo recurso sobrecarreguem o back end. Isso diminui os atrasos no processamento e libera o servidor para outras tarefas importantes. Configurando quais endpoints, cabeçalhos ou parâmetros participarão do cache, e definindo períodos de validade para essas informações, o sistema entrega dados de forma mais rápida e permanece escalável e eficiente.
        vr_en: |
          In an API cache layer, responses are held in a fast access storage, preventing multiple requests for the same resource from overloading the backend. This decreases processing delays and frees the server for other important tasks. By configuring which endpoints, headers or parameters participate in the cache, and setting validity periods for this information, the system delivers data faster and remains scalable and efficient.
    - custom:
        vr_pt: |
          O mecanismo de cache de API salva localmente as respostas mais comuns, economizando recursos do servidor back end e acelerando os tempos de resposta para os clientes. Você pode selecionar quais rotas, cabeçalhos ou parâmetros serão armazenados em cache e definir regras para expiração e limpeza automática, garantindo que apenas dados atuais e válidos sejam entregues, mesmo durante picos de uso intenso.
        vr_en: |
          The API cache mechanism locally stores the most common responses, saving backend server resources and speeding up response times for clients. You can select which routes, headers or parameters are cached and define rules for expiration and automatic cleanup, ensuring only current and valid data is delivered, even during peaks of heavy usage.
    - custom:
        vr_pt: |
          O cache de API mantém em memória ou em discos rápidos as respostas de endpoints acessados com frequência, eliminando a necessidade de reprocessamento repetitivo no back end. Isso melhora drasticamente a latência e permite maior escalabilidade dos serviços. Com políticas claras de tempo de vida e invalidação por recurso, cabeçalho ou string de consulta, o cache garante que as informações permaneçam válidas e o desempenho uniforme.
        vr_en: |
          API caching keeps responses from frequently accessed endpoints in memory or fast disks, eliminating the need for repetitive backend reprocessing. This drastically improves latency and allows greater service scalability. With clear time to live and invalidation policies by resource, header or query string, caching ensures information stays valid and performance remains consistent.
    - custom:
        vr_pt: |
          O cache de API permite armazenar as respostas mais populares em um sistema de armazenamento rápido, reduzindo a latência das respostas e o uso de processamento no serviço de origem. Por meio de filtros por rota, cabeçalho ou parâmetro, e configurações para expiração e remoção, o sistema entrega resultados com maior velocidade e consegue escalar melhor mesmo sob carga elevada.
        vr_en: |
          API caching allows storing the most popular responses in a fast storage system, reducing response latency and processing usage on the origin service. Through filters by route, header or parameter, and settings for expiration and eviction, the system delivers results faster and can scale better even under high load.
    - custom:
        vr_pt: |
          Implementar cache em uma API significa salvar em memória ou disco rápido as respostas de chamadas redundantes, diminuindo o tempo de resposta ao usuário e aliviando a carga no back end. Com opções para segmentar o cache por recurso, cabeçalho ou parâmetros de consulta, além de definir políticas de expiração e invalidação, o cache mantém a aplicação rápida, estável e resiliente, mesmo sob alta demanda.
        vr_en: |
          Implementing caching in an API means saving responses of redundant calls in memory or fast disk, reducing user response times and easing backend load. With options to segment cache by resource, header or query parameters, and setting expiration and eviction policies, caching keeps the application fast, stable and resilient even under heavy demand.
