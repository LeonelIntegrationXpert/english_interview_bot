version: '3.1'
responses:
  utter_api_caching:
    - custom:
        vr_pt: |
          O cache de API funciona como uma camada de armazenamento temporário que retém em memória ou em um sistema de armazenamento de alta velocidade as respostas de chamadas que são feitas repetidamente a um mesmo recurso. Em vez de encaminhar cada requisição de volta ao servidor principal, o cache devolve imediatamente o resultado já obtido anteriormente. Isso reduz o tempo de espera para o usuário, pois evita a necessidade de processar novamente a mesma informação, diminui a latência da aplicação e alivia a carga do servidor de back end. Durante períodos de tráfego intenso, essa estratégia ajuda a manter a estabilidade e a escalabilidade do serviço, pois o servidor pode atender a um número muito maior de solicitações simultâneas utilizando o conteúdo armazenado. É possível detalhar quais rotas, campos de cabeçalho ou parâmetros de consulta devem ser armazenados em cache, bem como determinar regras de expiração automática e políticas de limpeza periódica para garantir que os dados reflitam sempre o estado mais recente dos sistemas de origem.
        vr_en: |
          API caching acts as a temporary storage layer that holds in memory or in a high speed storage system the responses of calls repeatedly made to the same resource. Instead of forwarding every request to the main server, the cache immediately returns the previously obtained result. This reduces user waiting time by avoiding the need to process the same information again, lowers application latency and relieves the back end server load. During periods of heavy traffic, this strategy helps maintain service stability and scalability because the server can handle a much larger number of simultaneous requests using cached content. You can specify in detail which routes, header fields or query parameters should be cached, as well as define automatic expiration rules and periodic cleanup policies to ensure that the data always reflects the most recent state of the origin systems.
    - custom:
        vr_pt: |
          A estratégia de cache em APIs envolve conservar em um armazenamento de acesso muito rápido — seja em memória ou em discos de alta performance — as respostas de requisições que são repetidas com frequência. Ao fazer isso, evita-se enviar todas as chamadas de volta para o serviço de origem sempre que um dado já foi obtido recentemente, o que reduz significativamente o tempo de resposta percebido pelo usuário e o consumo de recursos do servidor de back end. É possível definir exatamente quais rotas ou endpoints devem ter suas respostas armazenadas em cache, além de especificar filtros baseados em cabeçalhos HTTP ou em parâmetros da URL para diferenciar cenários de uso. Para manter a consistência dos dados, também se configuram políticas de validade que determinam por quanto tempo cada item permanece em cache e regras de invalidação que removem ou atualizam o conteúdo armazenado assim que os dados de origem forem modificados. Essa abordagem garante baixo retrabalho, alta velocidade de entrega e confiabilidade mesmo em períodos de pico de acesso.
        vr_en: |
          The API caching strategy involves retaining in very fast storage — whether in memory or on high performance disks — the responses of requests that are made frequently. By doing so, you avoid sending every call back to the origin service whenever data has already been recently retrieved, which significantly reduces the response time experienced by the user and the consumption of back end server resources. You can precisely define which routes or endpoints should have their responses cached, and also specify filters based on HTTP headers or URL parameters to distinguish different use cases. To maintain data consistency, you configure freshness policies that determine how long each item stays in the cache and invalidation rules that remove or refresh stored content as soon as the origin data changes. This approach ensures minimal redundant processing, high delivery speed and reliability even during peak traffic periods.
    - custom:
        vr_pt: |
          No cache de API, as respostas dos endpoints mais utilizados são armazenadas em memória ou em um sistema de armazenamento ultrarrápido para evitar que o back end processe repetidamente as mesmas requisições. Essa abordagem reduz de forma significativa a latência percebida pelo usuário, pois o sistema retorna imediatamente a resposta já disponível em cache em vez de reenviar a chamada ao serviço de origem. Você pode definir o escopo do cache indicando quais rotas devem ser mantidas em memória, quais cabeçalhos HTTP devem ser considerados para diferenciar as requisições e até quais parâmetros de consulta devem influenciar o armazenamento. Além disso, é fundamental configurar políticas de expiração de modo que cada item fique armazenado apenas pelo tempo necessário antes de ser renovado ou removido, garantindo que os dados em cache reflitam sempre o estado mais recente do serviço. Com estas definições, o cache de API melhora a escalabilidade, preserva recursos de computação para outras operações e mantém a estabilidade do ambiente mesmo quando o tráfego atinge níveis elevados.
        vr_en: |
          In API caching, the responses from the most frequently used endpoints are stored in memory or in a very fast storage system to prevent the back end from having to process the same requests over and over again. This approach significantly reduces the latency experienced by the user, because the system returns the cached response immediately instead of forwarding the call to the origin service. You can define the cache scope by specifying which routes should be stored, which HTTP headers should be used to differentiate requests and even which query parameters should influence caching. It is also essential to set expiration policies so that each cached item remains available only for the necessary duration before being refreshed or removed, ensuring that the cached data always reflects the most current state of the service. With these configurations, API caching improves scalability, preserves computing resources for other tasks and maintains system stability even under high traffic conditions.
    - custom:
        vr_pt: |
          Cache de API significa manter localmente, em memória de alta velocidade ou em um sistema de armazenamento rápido, as respostas de requisições que se repetem com frequência. Em vez de encaminhar cada chamada para o servidor de origem, o cache retorna imediatamente o resultado já armazenado, o que diminui a latência percebida pelo usuário e reduz a carga de trabalho do back end. Para isso, você configura exatamente quais recursos devem ser armazenados em cache, por exemplo rotas específicas ou respostas de determinados serviços, bem como quais cabeçalhos HTTP ou parâmetros de consulta devem ser considerados para diferenciar as entradas. Além disso, é fundamental definir políticas de tempo de vida para cada item em cache, indicando por quanto tempo o dado permanece válido, e implementar limpezas periódicas que removem informações ultrapassadas, garantindo que o cache reflita sempre o estado mais recente do serviço. Com essa configuração detalhada, o sistema mantém a alta capacidade de atendimento e apresenta desempenho consistente mesmo em momentos de uso intenso, ao mesmo tempo em que assegura a confiabilidade dos dados entregues.
        vr_en: |
          API caching means locally storing, in high speed memory or in a fast storage system, the responses of requests that occur frequently. Rather than forwarding each call to the origin server, the cache immediately returns the stored result, which lowers the latency experienced by the user and reduces the workload on the back end. To implement this, you configure exactly which resources should be cached, for example specific routes or responses from certain services, as well as which HTTP headers or query parameters should be considered to distinguish cache entries. Additionally, it is essential to define time-to-live policies for each cached item, specifying how long each piece of data remains valid, and to implement periodic cleanups that remove stale information, ensuring that the cache always reflects the most current state of the service. With this detailed configuration, the system maintains high availability and delivers consistent performance even under heavy usage, while ensuring the reliability of the data returned.
    - custom:
        vr_pt: |
          O cache em APIs funciona da seguinte forma: quando um endpoint é chamado repetidamente com os mesmos parâmetros, a resposta retornada pelo servidor é salva em um armazenamento de acesso rápido, seja em memória interna ou em um disco de alta velocidade. Dessa maneira, em chamadas posteriores, o sistema entrega diretamente a resposta armazenada em cache, sem precisar enviar a requisição novamente ao servidor de origem. Isso diminui significativamente o tempo de resposta para o usuário, alivia o uso do processador e da rede no back end, e amplia a capacidade de atender mais requisições simultâneas. Para manter a precisão dos dados, você pode definir regras de expiração que indicam por quanto tempo cada entrada permanece válida, e regras de invalidação que forçam a remoção de itens do cache sempre que determinadas condições forem atendidas, como atualização de registro ou mudança de código. Essas configurações podem ser aplicadas a recursos específicos, cabeçalhos HTTP ou parâmetros de consulta, garantindo que somente as informações apropriadas sejam mantidas em cache e que os consumidores recebam sempre dados corretos e atualizados.
        vr_en: |
          API caching works as follows: when an endpoint is called repeatedly with the same parameters, the response returned by the server is saved in a fast access store, either in internal memory or on a high speed disk. This way, on subsequent calls, the system delivers the cached response directly without needing to send the request again to the origin server. This significantly reduces response time for the user, eases processor and network usage on the back end, and increases the capacity to handle more simultaneous requests. To maintain data accuracy, you can define expiration rules that specify how long each cache entry remains valid, and invalidation rules that force the removal of items whenever certain conditions are met, such as a record update or code change. These settings can be applied to specific resources, HTTP headers or query parameters, ensuring that only appropriate information is kept in cache and that consumers always receive accurate and up to date data.
    - custom:
        vr_pt: |
          Em uma camada de cache para APIs, as respostas das requisições são armazenadas em um local de alta velocidade, seja em memória ou em armazenamento rápido, para que chamadas repetidas ao mesmo recurso não precisem acionar o servidor de origem a cada vez. Isso reduz significativamente o tempo de espera do cliente, uma vez que o sistema retorna imediatamente o resultado em cache em vez de processar novamente a requisição. Além disso, o servidor de back end fica mais livre para lidar com outras operações críticas, melhorando a eficiência geral do ambiente. Você pode escolher exatamente quais endpoints devem participar do cache, bem como incluir ou excluir cabeçalhos HTTP e parâmetros de consulta específicos para garantir que somente as respostas relevantes sejam armazenadas. Para manter a consistência dos dados, defina períodos de validade que determinam por quanto tempo cada item ficará ativo no cache antes de ser renovado ou removido, e estabeleça políticas de limpeza automática para descartar entradas obsoletas.
        vr_en: |
          In an API cache layer, request responses are stored in a high speed location, either in memory or fast storage, so that repeated calls to the same resource do not need to reach the origin server each time. This greatly reduces client wait time, because the system immediately returns the cached result instead of reprocessing the request. In addition, the back end server is freed to handle other critical operations, improving overall system efficiency. You can choose exactly which endpoints participate in caching, as well as include or exclude specific HTTP headers and query parameters to ensure only relevant responses are stored. To maintain data consistency, set validity periods that determine how long each item remains active in cache before being refreshed or removed, and establish automatic cleanup policies to discard outdated entries.
    - custom:
        vr_pt: |
          O mecanismo de cache de API armazena localmente as respostas mais utilizadas em memória ou em um repositório de alta velocidade, evitando que o servidor de back end precise processar repetidamente as mesmas solicitações. Isso reduz o tempo de resposta para o cliente, pois o cache retorna imediatamente a informação solicitada sem percorrer toda a cadeia de processamento. É possível escolher exatamente quais rotas devem ser incluídas no escopo do cache, bem como especificar quais cabeçalhos HTTP e parâmetros de consulta serão considerados na chave de cache, garantindo que apenas as variações relevantes sejam armazenadas. Para manter a consistência dos dados, você define regras de expiração que determinam o período de validade de cada entrada em cache e configura limpezas automáticas para remover conteúdos desatualizados. Durante picos de uso intenso, esse mecanismo preserva a estabilidade do sistema ao reduzir a carga no back end e aumentar significativamente a capacidade de atendimento de solicitações simultâneas.
        vr_en: |
          The API cache mechanism stores the most frequently used responses locally in memory or in a high speed storage repository, preventing the back end server from having to reprocess the same requests repeatedly. This reduces client response time because the cache immediately returns the requested information without going through the full processing chain. You can choose exactly which routes are included in the cache scope, as well as specify which HTTP headers and query parameters are considered in the cache key, ensuring that only relevant variations are stored. To maintain data consistency, you define expiration rules that determine how long each cache entry remains valid and configure automatic cleanups to remove outdated content. During periods of heavy usage, this mechanism preserves system stability by reducing back end load and significantly increasing the capacity to handle simultaneous requests.
    - custom:
        vr_pt: |
          O cache de API armazena em memória ou em um sistema de armazenamento de alta velocidade as respostas de operações que são acessadas com muita frequência. Em vez de enviar cada solicitação novamente ao servidor de back end, o cache devolve imediatamente a resposta já guardada, o que reduz de forma drástica o tempo de espera e melhora significativamente a experiência do usuário. Essa estratégia também alivia a carga do servidor, permitindo que ele atenda a um número maior de requisições simultâneas sem degradar o desempenho. Para garantir que os dados permaneçam sempre corretos e atualizados, é possível definir políticas de tempo de vida que determinam por quanto tempo cada resposta ficará armazenada, além de regras de invalidação que removem automaticamente entradas antigas quando um recurso é modificado. Você pode aplicar esses controles por recurso específico, por cabeçalho HTTP ou por parâmetros de consulta, de modo que somente as variações relevantes sejam mantidas em cache e o comportamento permaneça consistente em todas as solicitações.
        vr_en: |
          API caching stores responses from very frequently accessed operations in memory or in a high speed storage system. Instead of sending each request again to the back end server, the cache immediately returns the previously stored response, which dramatically reduces waiting time and greatly improves the user experience. This strategy also relieves server load, allowing it to handle a larger number of simultaneous requests without degrading performance. To ensure that data remains correct and up to date, you can set time to live policies that determine how long each response is kept in the cache, as well as invalidation rules that automatically remove old entries when a resource is modified. You can apply these controls per specific resource, per HTTP header or per query parameter, so that only relevant variations are maintained in the cache and consistent behavior is preserved across all requests.
    - custom:
        vr_pt: |
          O cache de API permite guardar em memória ou em armazenamento de alta velocidade as respostas mais requisitadas, evitando que o servidor de origem precise processar repetidamente as mesmas solicitações. Com isso, o tempo de resposta ao usuário diminui significativamente e o uso de CPU e memória no back end é reduzido, resultando em maior capacidade de atendimento de requisições simultâneas. Você pode aplicar filtros para definir quais rotas devem ser cacheadas, quais campos de cabeçalho devem ser considerados e quais parâmetros de consulta influenciam o armazenamento. Além disso, é possível estabelecer políticas de expiração que determinam por quanto tempo cada resposta permanecerá no cache e regras de remoção automática que descartam entradas antigas quando novos dados são publicados. Essas configurações permitem que o sistema entregue resultados com muito mais rapidez e mantenha alta escalabilidade mesmo em situações de tráfego intenso.
        vr_en: |
          API caching enables you to store the most requested responses in memory or high speed storage, preventing the origin service from repeatedly processing the same requests. This significantly lowers response times for users and reduces CPU and memory usage on the back end, resulting in greater capacity to handle simultaneous requests. You can apply filters to specify which routes should be cached, which header fields to consider, and which query parameters affect storage. In addition, you can define expiration policies that determine how long each response remains in the cache and automatic eviction rules that remove old entries when new data is published. These settings allow the system to deliver results much faster and maintain high scalability even under heavy traffic.
    - custom:
        vr_pt: |
          Implementar cache em uma API significa armazenar em memória ou em disco de acesso rápido as respostas de chamadas que se repetem. Isso reduz o tempo que o usuário espera pela resposta e diminui a carga sobre o servidor de origem, tornando a aplicação mais ágil. Você pode escolher quais recursos devem ser mantidos em cache, quais campos de cabeçalho devem ser considerados e quais parâmetros de consulta influenciam o armazenamento. Além disso, é possível definir políticas de expiração que determinam por quanto tempo cada resposta ficará disponível no cache e regras de invalidação que removem automaticamente entradas antigas quando novos dados chegam. Com essas configurações, a API permanece rápida, estável e resiliente mesmo quando o número de acessos sobe muito durante períodos de pico.
        vr_en: |
          Implementing caching in an API means storing responses of repeated calls in memory or on fast disk. This reduces the time users wait for a response and lowers the load on the origin server, making the application more responsive. You can select which resources to cache, which header fields to include and which query parameters affect storage. You can also set expiration policies that determine how long each response stays in the cache and invalidation rules that automatically remove old entries when new data arrives. With these settings, the API remains fast, stable and resilient even when the number of requests increases greatly during high demand.
