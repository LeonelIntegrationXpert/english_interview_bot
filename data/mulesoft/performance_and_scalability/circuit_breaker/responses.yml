version: '3.1'
responses:
  utter_circuit_breaker:
    - custom:
        vr_pt: |
          O circuito de interrupção, conhecido como circuit breaker, é um padrão de resiliência usado para proteger sistemas contra falhas repetidas. Quando um serviço apresenta falhas consecutivas acima de um limite configurado, o circuito é aberto e todas as solicitações seguintes são imediatamente rejeitadas ou redirecionadas para um fluxo alternativo chamado fallback. Isso impede que o sistema fique sobrecarregado e evita que falhas se propaguem para outros componentes. Durante o período em que o circuito está aberto, o serviço principal não recebe mais tráfego, o que ajuda a protegê-lo e a permitir sua recuperação. Após um intervalo de repouso configurado, o circuito muda para um estado intermediário chamado meio aberto, onde algumas requisições de teste são enviadas para verificar se o serviço voltou a funcionar normalmente antes de reabrir completamente o fluxo de chamadas. Parâmetros como o número de falhas consecutivas permitidas, o intervalo de observação das falhas e o tempo que o circuito permanece aberto podem ser ajustados para equilibrar a sensibilidade do sistema e sua estabilidade.
        vr_en: |
          The circuit breaker is a resilience pattern used to protect systems from repeated failures. When a service experiences consecutive failures beyond a configured threshold, the circuit opens and all subsequent requests are immediately rejected or rerouted to an alternative flow called fallback. This prevents the system from becoming overloaded and avoids failures cascading to other components. During the period the circuit is open, the main service receives no traffic, which helps protect it and allows it to recover. After a configured cool down period, the circuit moves to a half open state, where some test requests are sent to check if the service is functioning normally before fully reopening the call flow. Parameters such as allowed consecutive failures, failure observation window, and open circuit duration can be tuned to balance system sensitivity and stability.
    - custom:
        vr_pt: |
          Esse padrão de proteção atua bloqueando requisições quando o número de falhas consecutivas ultrapassa um limite definido pelo administrador. Ao abrir o circuito, o sistema para de encaminhar chamadas para o serviço que apresenta problemas, e começa a retornar respostas de erro padronizadas ou redireciona as chamadas para rotas alternativas que oferecem funcionalidades de fallback. Isso reduz o impacto de falhas temporárias, protege o back end de sobrecarga e evita que o problema afete outras partes do sistema. Após o tempo de espera configurado, o circuito entra em uma fase de teste onde libera algumas requisições para verificar se o serviço foi restaurado, antes de permitir o retorno ao funcionamento normal.
        vr_en: |
          This protection pattern blocks requests when the number of consecutive failures exceeds a limit set by the administrator. When the circuit opens, the system stops forwarding calls to the problematic service and starts returning standardized error responses or reroutes calls to alternative paths that provide fallback functionality. This reduces the impact of transient failures, protects the backend from overload, and prevents the issue from affecting other parts of the system. After the configured wait time, the circuit enters a testing phase where it allows some requests to verify if the service has been restored before allowing normal operation to resume.
    - custom:
        vr_pt: |
          O circuit breaker cria uma barreira que evita falhas em cascata isolando serviços que estão instáveis ou com alto índice de erro. Ao detectar um número excessivo de falhas, o circuito abre e rejeita novas requisições durante um período configurado, dando tempo para que o serviço se estabilize. Durante esse intervalo, os usuários recebem respostas de fallback, garantindo uma experiência controlada e evitando que o sistema inteiro fique indisponível. Após o tempo configurado, o circuito entra em modo de teste, liberando um fluxo limitado de chamadas para verificar se o serviço voltou ao estado saudável antes de liberar todas as requisições novamente.
        vr_en: |
          The circuit breaker creates a barrier that prevents cascade failures by isolating services that are unstable or have a high error rate. When an excessive number of failures is detected, the circuit opens and rejects new requests for a configured period, giving the service time to stabilize. During this interval, users receive fallback responses, ensuring a controlled experience and preventing the entire system from becoming unavailable. After the configured time, the circuit enters a test mode, releasing a limited flow of calls to check if the service has returned to a healthy state before allowing all requests again.
    - custom:
        vr_pt: |
          O circuito de interrupção atua como uma válvula de segurança que protege o sistema de colapsos causados por falhas repetidas em um serviço. Quando muitas requisições falham rapidamente, o circuito abre para interromper o tráfego para o serviço afetado. Durante o estado aberto, o serviço não recebe novas chamadas, o que diminui a carga e permite que sejam realizados diagnósticos e reparos. Após um período de repouso, o circuito fecha parcialmente para executar chamadas de verificação do estado do serviço. Se os testes forem bem sucedidos, o circuito fecha completamente e restabelece o fluxo normal. Caso contrário, permanece aberto para continuar protegendo o sistema.
        vr_en: |
          The circuit breaker acts as a safety valve that protects the system from collapse caused by repeated failures in a service. When many requests fail quickly, the circuit opens to stop traffic to the affected service. During the open state, the service receives no new calls, reducing load and allowing diagnostics and repairs to be performed. After a cooldown period, the circuit partially closes to perform health check calls. If the tests succeed, the circuit fully closes and restores normal traffic. Otherwise, it stays open to continue protecting the system.
    - custom:
        vr_pt: |
          Esse padrão aciona o circuito de interrupção quando um número crítico de falhas consecutivas é alcançado. Enquanto o circuito estiver aberto, todas as requisições são bloqueadas ou direcionadas para um serviço de fallback que responde com dados alternativos ou mensagens padrão. Isso evita que o serviço principal seja submetido a novas tentativas que possam agravar o problema. Após o tempo de espera definido, o circuito entra em modo de meia abertura, permitindo algumas chamadas de teste para verificar se o serviço está saudável antes de reativar totalmente o tráfego da API.
        vr_en: |
          This pattern trips the circuit breaker when a critical number of consecutive failures is reached. While the circuit is open, all requests are blocked or routed to a fallback service that responds with alternative data or default messages. This prevents the primary service from being subjected to new attempts that could worsen the issue. After the defined wait time, the circuit enters a half open mode, allowing some test calls to check if the service is healthy before fully reactivating API traffic.
    - custom:
        vr_pt: |
          O circuito de interrupção previne falhas em cascata isolando um serviço com comportamento instável. Quando o número de erros ultrapassa o limite configurado, o circuito abre e retorna respostas padrão sem encaminhar as chamadas ao serviço principal. Durante o estado aberto, as métricas de monitoramento disparam alertas e logs detalhados são gerados para ajudar na análise do problema. Após um intervalo para recuperação, o circuito fecha parcialmente e permite chamadas de teste para verificar a integridade do serviço antes de liberar todo o tráfego novamente.
        vr_en: |
          The circuit breaker prevents cascade failures by isolating a service with unstable behavior. When the number of errors exceeds the configured limit, the circuit opens and returns default responses without forwarding calls to the primary service. During the open state, monitoring metrics trigger alerts and detailed logs are generated to assist in problem analysis. After a recovery interval, the circuit partially closes and allows test calls to verify the service integrity before releasing all traffic again.
    - custom:
        vr_pt: |
          Quando o circuito abre, ele bloqueia requisições direcionadas ao serviço afetado para evitar sobrecarga e degradação geral do sistema. O estado aberto dura um período definido durante o qual as chamadas recebem respostas de fallback para garantir continuidade do serviço. Após esse intervalo, o circuito entra em modo de teste, fechando parcialmente para enviar um número limitado de chamadas. Se essas chamadas forem bem sucedidas, o circuito fecha completamente; caso contrário, ele reabre e mantém a proteção pelo mesmo período.
        vr_en: |
          When the circuit opens, it blocks requests to the affected service to prevent overload and overall system degradation. The open state lasts for a defined period during which calls receive fallback responses to ensure service continuity. After this interval, the circuit enters test mode, partially closing to send a limited number of calls. If these calls succeed, the circuit fully closes; otherwise it reopens and maintains protection for the same duration.
    - custom:
        vr_pt: |
          Esse padrão de resiliência monitora continuamente a quantidade de exceções ou erros que ocorrem em um serviço. Ao detectar um padrão de falhas consecutivas, o circuito abre para bloquear novas chamadas. Durante o estado aberto, o sistema responde rapidamente com erros previstos, liberando o serviço principal para se recuperar. Após o tempo de espera configurado, o circuito fecha parcialmente e executa chamadas de validação para decidir se deve retornar ao funcionamento normal ou continuar aberto.
        vr_en: |
          This resilience pattern continuously monitors the number of exceptions or errors occurring in a service. Upon detecting a pattern of consecutive failures, the circuit opens to block new calls. During the open state, the system quickly responds with expected errors, freeing the primary service to recover. After the configured wait time, the circuit partially closes and performs validation calls to decide whether to return to normal operation or remain open.
    - custom:
        vr_pt: |
          O padrão de circuito de interrupção impede que um serviço instável cause falhas em outros componentes ao interromper o fluxo de requisições após atingir um limite de erros consecutivos. Enquanto o circuito está aberto, os consumidores recebem respostas de fallback e as métricas de observabilidade permitem analisar a causa raiz dos problemas. Em seguida, o circuito entra no modo de meia abertura para testar o serviço antes de liberar todo o tráfego novamente.
        vr_en: |
          The circuit breaker pattern prevents an unstable service from causing failures in other components by stopping the request flow after reaching a limit of consecutive errors. While the circuit is open, consumers receive fallback responses and observability metrics allow root cause analysis. Then the circuit enters half open mode to test the service before releasing all traffic again.
    - custom:
        vr_pt: |
          O circuito de interrupção é um padrão fundamental para garantir a resiliência de sistemas distribuídos, prevenindo que falhas em um componente derrubem toda a arquitetura. Ele funciona abrindo o circuito e bloqueando chamadas após um limite de erros consecutivos, redirecionando para fallback e monitorando o serviço para recuperação. Com parâmetros ajustáveis para número de falhas, tempo de abertura e janela de observação, esse padrão permite balancear proteção e disponibilidade para sistemas críticos.
        vr_en: |
          The circuit breaker is a fundamental pattern to ensure resilience in distributed systems, preventing failures in one component from bringing down the entire architecture. It works by opening the circuit and blocking calls after a limit of consecutive errors, redirecting to fallback and monitoring the service for recovery. With adjustable parameters for failure count, open time and observation window, this pattern allows balancing protection and availability for critical systems.
