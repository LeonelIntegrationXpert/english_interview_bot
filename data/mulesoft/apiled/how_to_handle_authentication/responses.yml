responses:
  utter_how_to_handle_authentication:
    - custom:
        response_array:
          -   - vr_pt: |
                  A autenticação e a autorização em uma arquitetura API led devem ser tratadas de forma específica para cada camada.  
                  Nas APIs do tipo Experience, recomenda se o uso de padrões como OAuth dois ponto zero ou tokens do tipo JWT, garantindo a autenticação de usuários externos.  
                  Nas APIs do tipo Process, o foco deve estar na validação dos escopos e das permissões presentes no token, assegurando o controle correto de acesso aos recursos internos.  
                  Já nas APIs do tipo System, recomenda se o uso de autenticação mútua baseada em certificados para proteger a comunicação com sistemas legados e de backend.  
                  Além disso, é uma boa prática aplicar políticas de segurança diretamente no gerenciador de APIs da plataforma, fortalecendo o controle de acesso e a governança de toda a estrutura.
              - vr_en: |
                  Authentication and authorization in an API led architecture should be handled specifically for each layer.  
                  In Experience type APIs, it is recommended to use standards such as OAuth two point zero or JWT tokens to authenticate external users.  
                  In Process type APIs, the main focus should be on validating scopes and permissions within the token to ensure proper internal access control.  
                  In System type APIs, mutual authentication with certificates is recommended to secure communication with legacy systems and backend services.  
                  Additionally, applying security policies directly in the API management platform helps strengthen access control and governance across the entire architecture.
