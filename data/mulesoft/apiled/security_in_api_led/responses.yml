responses:
  utter_security_in_api_led:
    - custom:
        response_array:
          -   - vr_pt: |
                  A **segurança em uma arquitetura API-led** deve ser pensada de forma abrangente e aplicada em todas as camadas:  
                  🔒 Na *System API*, utilize **autenticação mútua**, restrições de IP e certificados para proteger a comunicação com sistemas legados.  
                  🛡️ Nas *Process APIs*, implemente **validação de tokens**, controle de taxa (**rate limiting**) e proteção contra ataques como DoS.  
                  🌐 Já nas *Experience APIs*, adote **CORS**, **OAuth 2.0** e validações rigorosas de entrada para proteger a exposição pública.  
                  Para reforçar a governança, centralize as regras com o **API Manager**, aplicando políticas reutilizáveis e mantendo logs auditáveis.  
                  ➤ A segurança deve ser considerada desde a fase de design até a publicação da API.
              - vr_en: |
                  **Security in an API-led architecture** must be addressed holistically and enforced at every layer:  
                  🔒 In *System APIs*, use **mutual authentication**, IP whitelisting, and certificates to protect backend integrations.  
                  🛡️ In *Process APIs*, apply **token validation**, **rate limiting**, and safeguards against attacks like DoS.  
                  🌐 In *Experience APIs*, enforce **CORS**, **OAuth 2.0**, and strong input validation to secure public-facing endpoints.  
                  Leverage the **API Manager** to apply reusable security policies and maintain detailed, auditable logs.  
                  ➤ Security should be embedded from design to deployment for consistent protection.
