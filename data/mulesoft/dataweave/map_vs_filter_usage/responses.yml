responses:
  utter_map_vs_filter_usage:
    - custom:
        response_array:
          -
            - vr_pt: |
                ğŸ”„*Quando usar `map` ou `filter` no DataWeave*  
                ğŸŸ©ğŸ‡§ğŸ‡·**PortuguÃªs: Qual a diferenÃ§a entre `map` e `filter`?**  
                Ambas as funÃ§Ãµes percorrem listas, mas com propÃ³sitos diferentes:  
                âœ…**`map`** Ã© usada para *transformar* cada item de uma lista.  
                - Exemplo: converter nomes para letras maiÃºsculas.  
                - Resultado: a lista original permanece com o mesmo nÃºmero de itens, mas transformados.  
                âœ…**`filter`** Ã© usada para *filtrar* itens com base em uma condiÃ§Ã£o.  
                - Exemplo: manter apenas usuÃ¡rios com idade acima de 18 anos.  
                - Resultado: a lista pode ter menos itens, pois remove os que nÃ£o atendem Ã  condiÃ§Ã£o.  
                ğŸ§ *Resumo:*  
                Use `map` quando vocÃª quiser **modificar os elementos** de uma lista.  
                Use `filter` quando vocÃª quiser **selecionar elementos com base em uma regra**.
            - vr_en: |
                ğŸ”„*When to use `map` or `filter` in DataWeave*  
                ğŸ—½ğŸ‡ºğŸ‡¸**English: What's the difference between `map` and `filter`?**  
                Both functions iterate over lists, but serve different purposes:  
                âœ…**`map`** is used to *transform* each item in a list.  
                - Example: convert names to uppercase.  
                - Result: same number of items, but transformed.  
                âœ…**`filter`** is used to *select* items based on a condition.  
                - Example: keep only users over 18 years old.  
                - Result: fewer items may remain, depending on the condition.  
                ğŸ§ *Summary:*  
                Use `map` when you want to **modify the items** in a list.  
                Use `filter` when you want to **keep only items that match a rule**.
