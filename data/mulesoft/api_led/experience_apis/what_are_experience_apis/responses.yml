version: '3.1'
responses:
  utter_what_are_experience_apis:
    - custom:
        vr_pt: |
          As APIs de Experiência formam a camada superior na arquitetura API-led. Elas adaptam e combinam as respostas das APIs de Processo para canais como web, aplicativos móveis ou chatbots. Essas APIs transformam os dados recebidos, formatam o conteúdo para proporcionar uma experiência personalizada ao usuário, implementam cache no front-end para reduzir a latência, versionam contratos específicos para cada canal, adicionam lógica de personalização, orquestram múltiplas chamadas às APIs de Processo, expõem endpoints otimizados para desempenho e geram métricas de uso específicas para cada canal.
        vr_en: |
          The Experience APIs form the top layer in the API-led architecture. They adapt and combine responses from the Process APIs for channels such as web, mobile applications, or chatbots. These APIs transform incoming data, format content to provide a personalized user experience, implement front-end caching to reduce latency, version contracts specific to each channel, add personalization logic, orchestrate multiple calls to Process APIs, expose optimized endpoints for performance, and generate usage metrics specific to each channel.
    - custom:
        vr_pt: |
          As APIs de Experiência são responsáveis por entregar dados prontos para cada canal, agregando as respostas das APIs de Processo. Elas aplicam transformações de payload, ajustam os formatos para interfaces específicas, usam cache local para melhorar a performance, versionam contratos, personalizam a lógica conforme as necessidades do canal, orquestram fluxos de APIs, definem endpoints leves e coletam métricas detalhadas das interações dos usuários.
        vr_en: |
          The Experience APIs are responsible for delivering channel-ready data by aggregating responses from the Process APIs. They apply payload transformations, adjust formats for specific interfaces, use local caching to improve performance, version contracts, personalize logic according to channel needs, orchestrate API flows, define lightweight endpoints, and collect detailed metrics of user interactions.
    - custom:
        vr_pt: |
          As APIs de Experiência conectam a camada de apresentação às APIs de Processo, transformando e combinando dados para cada canal. Elas formatam a saída para oferecer uma experiência de usuário adequada, aplicam cache para reduzir a latência, versionam especificações de contrato, incorporam filtros e preferências do usuário, coordenam chamadas a múltiplas APIs de Processo e expõem endpoints rápidos e responsivos.
        vr_en: |
          The Experience APIs connect the presentation layer to the Process APIs by transforming and combining data for each channel. They format output to provide an appropriate user experience, apply caching to reduce latency, version contract specifications, incorporate user filters and preferences, coordinate calls to multiple Process APIs, and expose fast and responsive endpoints.
    - custom:
        vr_pt: |
          As APIs de Experiência orquestram as respostas das APIs de Processo, formatam os payloads para canais como web, mobile e chatbots. Elas implementam cache de borda para garantir alta velocidade, versionam contratos por interface, adicionam lógica personalizada, coordenam múltiplas integrações, expõem APIs enxutas para melhor desempenho e monitoram o uso por canal para análise detalhada.
        vr_en: |
          The Experience APIs orchestrate responses from the Process APIs, format payloads for channels such as web, mobile, and chatbots. They implement edge caching to ensure high speed, version contracts per interface, add personalized logic, coordinate multiple integrations, expose lean APIs for better performance, and monitor channel usage for detailed analysis.
    - custom:
        vr_pt: |
          As APIs de Experiência transformam e apresentam dados vindos das APIs de Processo de forma otimizada para cada canal. Elas aplicam transformações de payload, ajustam o layout dos dados para a experiência do usuário, usam cache local, versionam endpoints, personalizam o conteúdo através de filtros, coordenam a orquestração de múltiplas APIs e registram métricas de engajamento dos usuários.
        vr_en: |
          The Experience APIs transform and present data from the Process APIs in an optimized way for each channel. They apply payload transformations, adjust data layouts for user experience, use local caching, version endpoints, personalize content through filters, coordinate orchestration of multiple APIs, and record user engagement metrics.
    - custom:
        vr_pt: |
          As APIs de Experiência moldam a saída das APIs de Processo para interfaces específicas, agregando e transformando payloads. Elas implementam cache no front-end, versionam contratos por canal, incorporam preferências dos usuários, orquestram fluxos de dados, exibem endpoints ágeis e coletam métricas de performance para monitoramento contínuo.
        vr_en: |
          The Experience APIs shape Process API output for specific interfaces by aggregating and transforming payloads. They implement front-end caching, version contracts per channel, incorporate user preferences, orchestrate data flows, expose agile endpoints, and collect performance metrics for continuous monitoring.
    - custom:
        vr_pt: |
          As APIs de Experiência adaptam e combinam as APIs de Processo para entregar uma camada de apresentação eficiente. Elas transformam os payloads, ajustam os formatos para proporcionar uma boa experiência do usuário, usam cache de borda para agilidade, versionam endpoints, personalizam respostas com base no contexto do usuário, gerenciam chamadas paralelas e emitem métricas específicas de uso para cada canal.
        vr_en: |
          The Experience APIs adapt and combine Process APIs to deliver an efficient presentation layer. They transform payloads, adjust formats to provide a good user experience, use edge caching for agility, version endpoints, personalize responses based on user context, manage parallel calls, and emit usage-specific metrics for each channel.
    - custom:
        vr_pt: |
          As APIs de Experiência oferecem a interface final ao usuário, reunindo dados das APIs de Processo, aplicando transformações de payload e formatando os dados para cada canal. Elas habilitam cache local, versionam os serviços, adicionam lógica dinâmica, orquestram múltiplas APIs e monitoram as interações por canal para garantir qualidade na experiência do usuário.
        vr_en: |
          The Experience APIs provide the final user interface by gathering data from the Process APIs, applying payload transformations, and formatting data for each channel. They enable local caching, version services, add dynamic logic, orchestrate multiple APIs, and monitor interactions per channel to ensure quality in the user experience.
    - custom:
        vr_pt: |
          As APIs de Experiência compõem a camada de apresentação, processando as saídas das APIs de Processo. Elas transformam e formatam payloads, implementam cache para garantir uma experiência de usuário fluida, definem versões de contrato para cada canal, incorporam lógica de personalização, orquestram chamadas e rastreiam métricas específicas da interface.
        vr_en: |
          The Experience APIs make up the presentation layer by processing outputs from the Process APIs. They transform and format payloads, implement caching to ensure a smooth user experience, define contract versions per channel, incorporate personalization logic, orchestrate calls, and track interface-specific metrics.
    - custom:
        vr_pt: |
          As APIs de Experiência criam endpoints otimizados para cada canal, adaptando os dados das APIs de Processo. Elas aplicam transformação de payload, formatam para uma experiência do usuário específica, usam cache no front-end, versionam contratos por interface, incluem filtros personalizados, coordenam múltiplas integrações e geram métricas detalhadas de uso para análise.
        vr_en: |
          The Experience APIs create optimized endpoints for each channel by adapting data from the Process APIs. They apply payload transformation, format data for a specific user experience, use front-end caching, version contracts per interface, include personalized filters, coordinate multiple integrations, and generate detailed usage metrics for analysis.
