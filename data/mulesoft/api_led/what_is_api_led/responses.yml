version: '3.1'
responses:
  utter_what_is_api_led:
    - custom:
        vr_pt: |
          Arquitetura API-led organiza as APIs em três camadas distintas para garantir melhor reaproveitamento e governança. Primeiro, a Camada de Sistema é responsável por acessar sistemas legados e fontes de dados. Depois, a Camada de Processo aplica a lógica de negócio e transforma as informações recebidas. Por fim, a Camada de Experiência entrega APIs específicas e adaptadas para canais como web ou aplicativos móveis. As vantagens dessa abordagem incluem o reaproveitamento de componentes, a clareza na definição de responsabilidades, o controle centralizado das políticas de segurança e a possibilidade de escalonar cada camada de forma independente. Exemplos práticos incluem a integração de sistemas legados com microserviços, a disponibilização de dados para aplicativos móveis e a orquestração de fluxos complexos entre sistemas.
        vr_en: |
          The API-led architecture organizes APIs into three distinct layers to ensure better reuse and governance. First, the System Layer is responsible for accessing legacy systems and data sources. Then, the Process Layer applies business logic and transforms the data received. Finally, the Experience Layer delivers APIs that are specific and adapted to channels such as web or mobile applications. The advantages of this approach include component reuse, clarity in defining responsibilities, centralized control of security policies, and the ability to scale each layer independently. Practical examples include integrating legacy systems with microservices, providing data for mobile apps, and orchestrating complex flows between systems.
    - custom:
        vr_pt: |
          A abordagem API-led divide as APIs em três camadas: a Camada de Sistema, a Camada de Processo e a Camada de Experiência. A Camada de Sistema comunica-se diretamente com bancos de dados e sistemas legados, garantindo acesso aos dados necessários. A Camada de Processo aplica regras de negócio e transforma os dados para as necessidades da aplicação. Já a Camada de Experiência oferece APIs customizadas para diferentes tipos de consumidores, como sites e dispositivos móveis. Os benefícios incluem o desenvolvimento mais rápido, manutenção facilitada, aplicação centralizada de políticas e escalabilidade isolada para cada camada. Exemplos comuns são a conexão de sistemas legados a microsserviços, a criação de APIs para aplicativos móveis e a orquestração de fluxos via APIs.
        vr_en: |
          The API-led approach divides APIs into three layers: the System Layer, the Process Layer, and the Experience Layer. The System Layer communicates directly with databases and legacy systems, ensuring access to the required data. The Process Layer applies business rules and transforms the data according to application needs. The Experience Layer provides customized APIs for different types of consumers, such as websites and mobile devices. Benefits include faster development, easier maintenance, centralized policy enforcement, and isolated scalability for each layer. Common examples are connecting legacy systems to microservices, creating APIs for mobile applications, and orchestrating flows via APIs.
    - custom:
        vr_pt: |
          No modelo API-led, as APIs são organizadas em três níveis principais: Camada de Sistema, Camada de Processo e Camada de Experiência. A Camada de Sistema abstrai os sistemas legados e fontes de dados para facilitar o acesso. A Camada de Processo implementa e reutiliza a lógica de negócio, transformando os dados conforme necessário. A Camada de Experiência entrega endpoints específicos para diferentes front-ends, como aplicações web ou móveis. Essa estrutura melhora o reaproveitamento das APIs, mantém as responsabilidades separadas, centraliza a segurança e permite o escalonamento independente de cada camada. Exemplos típicos incluem a modernização de sistemas legados, a criação de APIs para dispositivos móveis e o controle da orquestração de processos.
        vr_en: |
          In the API-led model, APIs are organized into three main layers: System Layer, Process Layer, and Experience Layer. The System Layer abstracts legacy systems and data sources to simplify access. The Process Layer implements and reuses business logic, transforming data as needed. The Experience Layer delivers endpoints specific to different front-ends, such as web or mobile applications. This structure improves API reuse, keeps responsibilities separated, centralizes security, and allows independent scaling of each layer. Typical examples include modernizing legacy systems, building APIs for mobile devices, and managing process orchestration.
    - custom:
        vr_pt: |
          API-led propõe a divisão das APIs em três camadas: Sistema, Processo e Experiência, com foco na reutilização e governança. Na Camada de Sistema, há conexão direta com as fontes de dados. Na Camada de Processo ocorre a orquestração e a transformação das informações. Na Camada de Experiência, são expostas APIs customizadas para os consumidores finais. Os benefícios incluem maior rapidez no desenvolvimento, clareza no design das APIs, aplicação unificada das políticas e escalabilidade isolada de cada camada. Casos práticos comuns são a integração de sistemas legados, a oferta de serviços para aplicativos móveis e a gestão de workflows complexos.
        vr_en: |
          API-led proposes dividing APIs into three layers: System, Process, and Experience, focusing on reuse and governance. The System Layer directly connects to data sources. The Process Layer orchestrates and transforms information. The Experience Layer exposes customized APIs to end users. Benefits include faster development, clear API design, unified policy enforcement, and isolated scalability of each layer. Common practical cases are legacy system integration, offering services to mobile applications, and managing complex workflows.
    - custom:
        vr_pt: |
          Na arquitetura API-led, as APIs são divididas em três camadas principais: Camada de Sistema, Camada de Processo e Camada de Experiência. A primeira conecta os sistemas legados ao ambiente de APIs. A segunda centraliza a lógica de negócio e a manipulação dos dados. A terceira apresenta APIs adaptadas para interfaces cliente específicas. Essa divisão facilita o reaproveitamento dos componentes, define limites claros de responsabilidade, centraliza a aplicação das políticas de segurança e permite que cada camada escale de forma independente. Exemplos práticos incluem a migração de sistemas antigos, a criação de back-ends para aplicativos móveis e a coordenação de chamadas entre APIs.
        vr_en: |
          In the API-led architecture, APIs are divided into three main layers: System Layer, Process Layer, and Experience Layer. The first connects legacy systems to the API environment. The second centralizes business logic and data handling. The third presents APIs adapted to specific client interfaces. This division facilitates component reuse, sets clear responsibility boundaries, centralizes the application of security policies, and allows each layer to scale independently. Practical examples include migrating old systems, building back-ends for mobile applications, and coordinating API calls.
    - custom:
        vr_pt: |
          API-led organiza seus serviços em três camadas distintas: a Camada de Sistema, que acessa as fontes de dados; a Camada de Processo, que aplica a lógica de negócio e realiza transformações; e a Camada de Experiência, que oferece APIs específicas para consumidores determinados. Esse modelo promove o reaproveitamento de componentes, deixa claras as responsabilidades de cada camada, uniformiza as políticas de segurança e possibilita escalar cada parte sem impactar as outras. É utilizado para integrar sistemas legados, expor APIs para dispositivos móveis e orquestrar processos complexos.
        vr_en: |
          API-led organizes services into three distinct layers: the System Layer, which accesses data sources; the Process Layer, which applies business logic and performs transformations; and the Experience Layer, which offers APIs specific to certain consumers. This model promotes component reuse, clarifies the responsibilities of each layer, standardizes security policies, and enables scaling each part without impacting the others. It is used to integrate legacy systems, expose APIs to mobile devices, and orchestrate complex processes.
    - custom:
        vr_pt: |
          A prática API-led estabelece três camadas principais: a Camada de Sistema, que conecta sistemas legados e dados; a Camada de Processo, que orquestra as regras de negócio; e a Camada de Experiência, que cria APIs para consumo por aplicativos ou front-ends. Essa abordagem acelera o desenvolvimento por meio do reaproveitamento de APIs, melhora a manutenção ao separar as responsabilidades, garante governança centralizada e permite escalar cada camada conforme a demanda. Exemplos incluem sincronizar sistemas internos, publicar APIs para interfaces de usuário e gerenciar fluxos de trabalho.
        vr_en: |
          The API-led practice establishes three main layers: the System Layer, which connects legacy systems and data; the Process Layer, which orchestrates business rules; and the Experience Layer, which creates APIs for consumption by applications or front ends. This approach speeds up development through API reuse, improves maintenance by separating responsibilities, ensures centralized governance, and allows each layer to scale according to demand. Examples include syncing internal systems, publishing APIs for user interfaces, and managing workflows.
    - custom:
        vr_pt: |
          API-led é um modelo em três camadas: primeiro, a Camada de Sistema expõe os dados do back-end; em seguida, a Camada de Processo implementa a lógica e repassa as informações; por último, a Camada de Experiência fornece APIs adequadas ao contexto do usuário. Os benefícios incluem redução de esforço graças ao uso de APIs reutilizáveis, responsabilidades bem definidas, políticas de segurança padronizadas e escalonamento independente das camadas. Usos típicos são expor dados legados, fornecer endpoints para aplicativos e orquestrar serviços.
        vr_en: |
          API-led is a three-layer model: first, the System Layer exposes back-end data; then, the Process Layer implements logic and passes on information; finally, the Experience Layer provides APIs suitable for the user context. Benefits include reduced effort through reusable APIs, well-defined responsibilities, standardized security policies, and independent scaling of layers. Typical uses are exposing legacy data, providing endpoints for applications, and orchestrating services.
    - custom:
        vr_pt: |
          Na estratégia API-led, as APIs são divididas em três camadas: a Camada de Sistema para acesso direto aos sistemas legados, a Camada de Processo para transformar e unificar os dados, e a Camada de Experiência para disponibilizar APIs customizadas. As vantagens incluem o uso de APIs como blocos de construção, clareza na divisão de responsabilidades, governança centralizada sobre políticas e possibilidade de escalonamento modular. Exemplos de uso são a criação de adaptadores para sistemas legados, APIs para clientes móveis e a coordenação de transações entre múltiplos sistemas.
        vr_en: |
          In the API-led strategy, APIs are divided into three layers: the System Layer for direct access to legacy systems, the Process Layer to transform and unify data, and the Experience Layer to provide customized APIs. Advantages include using APIs as building blocks, clarity in dividing responsibilities, centralized governance over policies, and the possibility of modular scaling. Use cases include building adapters for legacy systems, APIs for mobile clients, and coordinating transactions across multiple systems.
    - custom:
        vr_pt: |
          API-led propõe três camadas de APIs: a Camada de Sistema, para conectar legados e fontes de dados; a Camada de Processo, para aplicar regras de negócio e converter formatos; e a Camada de Experiência, para expor APIs para casos de uso específicos. Esse design possibilita o reaproveitamento de serviços, separa claramente as responsabilidades, aplica governança unificada e permite escalar cada camada conforme a necessidade. Exemplos práticos são conectar sistemas ERP, fornecer APIs para aplicativos móveis e orquestrar jornadas do usuário.
        vr_en: |
          API-led proposes three API layers: the System Layer, to connect legacy and data sources; the Process Layer, to apply business rules and convert formats; and the Experience Layer, to expose APIs for specific use cases. This design enables service reuse, clearly separates responsibilities, applies unified governance, and allows each layer to scale as needed. Practical examples include connecting ERP systems, providing APIs for mobile applications, and orchestrating user journeys.
